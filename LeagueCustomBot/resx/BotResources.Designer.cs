//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeagueCustomBot.resx {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class BotResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal BotResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LeagueCustomBot.resx.BotResources", typeof(BotResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channels need to be setup first! Use /setup-channels.
        /// </summary>
        internal static string ChannelsNeedToBeSetup {
            get {
                return ResourceManager.GetString("ChannelsNeedToBeSetup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Channels have to be voice Channels!.
        /// </summary>
        internal static string ChannelsNeedToBeVoiceChannels {
            get {
                return ResourceManager.GetString("ChannelsNeedToBeVoiceChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Channels setup! Blue Team Channel: &lt;#{0}&gt; Red Team Channel: &lt;#{1}&gt; Base Team Channel: &lt;#{2}&gt;.
        /// </summary>
        internal static string ChannelsSpecified {
            get {
                return ResourceManager.GetString("ChannelsSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **An Error occured**.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lobby is already running!.
        /// </summary>
        internal static string LobbyAlreadyRunning {
            get {
                return ResourceManager.GetString("LobbyAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lobby is already Full!.
        /// </summary>
        internal static string LobbyFullAlready {
            get {
                return ResourceManager.GetString("LobbyFullAlready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lobby is currently empty!.
        /// </summary>
        internal static string LobbyIsEmpty {
            get {
                return ResourceManager.GetString("LobbyIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Lobby not full, need more players!**.
        /// </summary>
        internal static string LobbyNotFull {
            get {
                return ResourceManager.GetString("LobbyNotFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lobby needs to be rolled first! /roll.
        /// </summary>
        internal static string LobbyNotRolled {
            get {
                return ResourceManager.GetString("LobbyNotRolled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Lobby is not started!** Please use **/start** or press the Button!.
        /// </summary>
        internal static string LobbyNotRunning {
            get {
                return ResourceManager.GetString("LobbyNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lobby is ready! Roll Master *({0})* can now roll teams by using /roll or by pressing the button!.
        /// </summary>
        internal static string LobbyReady {
            get {
                return ResourceManager.GetString("LobbyReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Lobby was restarted!** All Lobby Members removed! You can now use **/join** or **/remove**! Roll Master: **{0}**.
        /// </summary>
        internal static string LobbyRestarted {
            get {
                return ResourceManager.GetString("LobbyRestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Lobby was started!** You can now use **/join** or **/remove**! Roll Master: **{0}**.
        /// </summary>
        internal static string LobbyStarted {
            get {
                return ResourceManager.GetString("LobbyStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the Roll Master ({0}) can roll!.
        /// </summary>
        internal static string OnlyRollMasterCanRoll {
            get {
                return ResourceManager.GetString("OnlyRollMasterCanRoll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player {0} joined the lobby!.
        /// </summary>
        internal static string PlayerAdded {
            get {
                return ResourceManager.GetString("PlayerAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player {0} is already in the Lobby!.
        /// </summary>
        internal static string PlayerAlreadyInLobby {
            get {
                return ResourceManager.GetString("PlayerAlreadyInLobby", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Values of Player {0} were changed!.
        /// </summary>
        internal static string PlayerInformationChanged {
            get {
                return ResourceManager.GetString("PlayerInformationChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player {0} not found in lobby!.
        /// </summary>
        internal static string PlayerNotFound {
            get {
                return ResourceManager.GetString("PlayerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player {0} was removed from the lobby!.
        /// </summary>
        internal static string PlayerRemoved {
            get {
                return ResourceManager.GetString("PlayerRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teams rolled:.
        /// </summary>
        internal static string Rolled {
            get {
                return ResourceManager.GetString("Rolled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Want to reroll? Just type /roll again or press the button!.
        /// </summary>
        internal static string WantToReroll {
            get {
                return ResourceManager.GetString("WantToReroll", resourceCulture);
            }
        }
    }
}
